<?php 
	$this->placeholder('page_name')->set($name); 
	$this->placeholder('page_hash')->set($page_hash);
?>
<div class="row-fluid">
	<div class="span12" id="content">
		<div style="position:absolute; width:450px" class="alert alert-error">
			<button data-dismiss="alert" class="close">Ã—</button>
			<strong>Pro Tip:</strong> If you haven't, bookmark your Daily.IO page <b>NOW</b>!
		</div>
		<section id="todoapp">
			<header id="header">
				<h1><?php echo $day;?></h1>
				<form id="addItemForm"><input id="new-todo" placeholder="What needs to be done?" autofocus autocomplete="off"></form>
			</header>
			<section id="main">
				<ul id="todo-list">
                    
				</ul>
			</section>
			<footer id="footer">
				<span id="todo-count"><?php echo $year; ?></span>
				<button id="clear-completed">Idle</button>
			</footer>
		</section>
		<section id="yesterday">
			<header id="header-yesterday">
				<h1><?php echo $prevday;?></h1>
			</header>
			<section id="main-yesterday">
				<ul id="todo-list-yesterday">
					
				</ul>
			</section>
		</section>	
	</div>
</div>

<script>
var page_hash = '<?php echo $page_hash;?>';
var dayStr = '<?php echo $dbday;?>';
var prevdayStr = '<?php echo $dbprevday;?>';
var idCounter = 1;
var dailyItem = {
	dataUrl : '/do',	
	items : [],
	previtems : [],
	yesterdayItems : [],
	init : function() {
		$('#clear-completed').html('Loading...');
		thisObj = this;
		$.getJSON(this.dataUrl, {'page_hash':page_hash, 'day': dayStr, 'prevday': prevdayStr}, function(jsonData) {
	    	$.each($( jsonData.data.items ), function(index, value) {
	    		var item = { id:idCounter++, itemText: value.itemText, completed: value.completed};
	    		thisObj.items.push(item);
	    		thisObj.print(item);
		    });

	        if(jsonData.data.previtems.length == 0) {
	        	var html = '<li><div class="view"><label><i>No activity</i></label></div></li>';
	    		$('#todo-list-yesterday').append(html);
		    } else {
		    	$.each($( jsonData.data.previtems ), function(index, value) {
		    		var item = { id:idCounter++, itemText: value.itemText, completed: value.completed};
		    		thisObj.previtems.push(item);
		    		thisObj.printprev(item);
			    });
		    }

	        $('#clear-completed').html('Done!');
			setTimeout(function() {
				$('#clear-completed').html('Idle');
			}, 1000);
		});
	},
	add : function(text) {
		var item = { id:idCounter++, itemText: text, completed: false};
		this.items.push(item);
		this.print(item);
		this.save();
	},
	edit : function(id, text) {
		var thisObj = this;
		$.each(this.items, function(index, value) {
			if(id == value.id) {
				thisObj.items[index].itemText = text;
				thisObj.save();
			}
		});
	},
	setCompleted : function(id, completed) {
		var thisObj = this;
		console.log(id,completed);
		$.each(this.items, function(index, value) {
			console.log(id,value.id);
			if(id == value.id) {
				thisObj.items[index].completed = completed;
				thisObj.save();
			}
		});
	},
	print : function(item) {
		var liClass = "";
		var checkStatus = "";
		if(item.completed == "true") {
			liClass = " class='completed'";
			checkStatus = "checked";
		}
		var html = '<li '+liClass+' data-id="'+item.id+'"><div class="view"><input '+checkStatus+' type="checkbox" class="toggle" data-color="green"><span></span><label>'+item.itemText+'</label><button class="destroy"></button></div><form id="editItemForm"><input value="'+item.itemText+'" class="edit"></form></li>';
		$('#todo-list').append(html);
	},
	printprev : function(item) {
		var liClass = "";
		if(item.completed == "true") {
			liClass = " class='completed'";
		}
		var html = '<li '+liClass+' data-id="'+item.id+'"><div class="view"><label>'+item.itemText+'</label><button class="copy"></button></div></li>';
		$('#todo-list-yesterday').append(html);
	},
	save : function() {
		$('#clear-completed').html('Saving...');
		$.ajax({
			url: this.dataUrl,
			type: "post",
	        data: {page_data: this.items, page_date: dayStr, page_hash: page_hash},
			success: function(jsonData) {
				$('#clear-completed').html('Saved!');
				setTimeout(function() {
					$('#clear-completed').html('Idle');
				}, 1000);
			}
		});
	},
	destroy : function(id) {
		thisObj = this;
		$.each(thisObj.items, function(index, value) {
			if(value.id == id) {
				thisObj.items.splice(index, 1);
				thisObj.save();
			}
		});
	}
};

$(document).on("submit", "#editItemForm", function(event) {
	var thisObj = $(this);
	var liItem = thisObj.parent('li');
	var input = thisObj.children('input');
	dailyItem.edit(liItem.attr('data-id'), input.val());
	
	liItem.children('div.view').children('label').html(input.val());
	liItem.removeClass('editing');

	$('#new-todo').val('').focus();
	return false;
});

$(document).on("submit", "#addItemForm", function(event){
	dailyItem.add($('#new-todo').val());
	$('#new-todo').val('').focus();
	return false;
});

$(document).on("dblclick", "#todo-list label", function(event){
	var input = $(this).parent('div.view').parent('li').addClass('editing').children('form#editItemForm').find('.edit');
	var val = input.val();

	input.val(val).focus();
	return false;
});

$(document).on("click", ".destroy", function(event){
    var liElem = $(this).parent().parent();
	dailyItem.destroy(liElem.attr('data-id'));
	liElem.remove();
	return false;
});

$(document).on("click", ".copy", function(event){
    var labelElem = $(this).prev();
	dailyItem.add(labelElem.html());
	return false;
});

$(document).on("click", ".toggle", function(event){
	completed = false;
    var liElem = $(this).parent().parent();
	if(liElem.hasClass('completed')) {
		liElem.removeClass('completed');
	} else {
		liElem.addClass('completed');
		completed = true;
	}

	dailyItem.setCompleted(liElem.attr('data-id'), completed);
});

$(document).on("click", "#bookmark", function(event){
	return false;
});

dailyItem.init();
</script>